{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "_fallback.svelte",
    "_layout.svelte",
    "Biseccion.svelte",
    "FuncInput.svelte",
    "Newton.svelte",
    "PuntoFijo.svelte",
    "Secante.svelte",
    "Table.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { Router } from \"@roxi/routify\";\n  import { routes } from \"../.routify/routes\";\n</script>\n\n<style  global>:global(html), :global(body) {\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n}\n\n:global(body) {\n\tcolor: #333;\n\tmargin: 0;\n\tpadding: 8px;\n\tbox-sizing: border-box;\n\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n}\n\n:global(a) {\n\tcolor: rgb(0,100,200);\n\ttext-decoration: none;\n}\n\n:global(a:hover) {\n\ttext-decoration: underline;\n}\n\n:global(a:visited) {\n\tcolor: rgb(0,80,160);\n}\n\n:global(label) {\n\tdisplay: block;\n}\n\n:global(input), :global(button), :global(select), :global(textarea) {\n\tfont-family: inherit;\n\tfont-size: inherit;\n\tpadding: 0.4em;\n\tmargin: 0 0 0.5em 0;\n\tbox-sizing: border-box;\n\tborder: 1px solid #ccc;\n\tborder-radius: 2px;\n}\n\n:global(input:disabled) {\n\tcolor: #ccc;\n}\n\n:global(input[type=\"range\"]) {\n\theight: 0;\n}\n\n:global(button) {\n\tcolor: #333;\n\tbackground-color: #f4f4f4;\n\toutline: none;\n}\n\n:global(button:disabled) {\n\tcolor: #999;\n}\n\n:global(button:not(:disabled):active) {\n\tbackground-color: #ddd;\n}\n\n:global(button:focus) {\n\tborder-color: #666;\n}</style>\n\n<Router {routes} />",
    "<script>\n    import { url } from '@roxi/routify'\n</script>\n\n<style>\n  .huge {\n    font-size: 12rem;\n  }\n  .e404 {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n  }</style>\n\n<div class=\"e404\">\n  <div class=\"huge\">404</div>\n  <div class=\"big\">Page not found. \n  <!-- link to the parent folder of _fallback.svelte -->\n  <a href={$url('../')}>Go back</a>\n  </div>\n</div>\n",
    "<div class=\"container\">\n  <slot />\n</div>\n\n<style>\n  .container {\n    padding: 5%;\n    display: grid;\n  }</style>\n",
    "<script>\n  import Table from \"./Table.svelte\";\n  import { solve_function } from \"./script\";\n\n  export let func;\n\n  let xi = -1;\n  let xf = 1;\n  let tol = 1e-6;\n  let err = \"abs\";\n  let regla_falsa = false;\n  let n_max_iter = 1000;\n\n  let message;\n  let raiz;\n  let procedimiento = [];\n\n  $: func || xi || xf || tol || err || regla_falsa || n_max_iter\n    ? calculate()\n    : null;\n\n  async function calculate() {\n    try {\n      const response = await solve_function(\"biseccion\", {\n        xi,\n        xf,\n        tol,\n        err,\n        n_max_iter,\n        func,\n        regla_falsa,\n      });\n\n      raiz = response.raiz;\n      message = response.message;\n      procedimiento = response.results;\n      console.log(response);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n</script>\n\n<div class=\"container\">\n  <div class=\"table\">\n    <div>\n      {raiz}\n    </div>\n    <div>\n      {message}\n    </div>\n    <Table table={procedimiento} encabezado={[\"x\", \"f(x)\", `Error ${err}`]} />\n  </div>\n  <div class=\"info\">\n    <label>\n      Coordenada inicial del intervalo\n      <input type=\"text\" bind:value={xi} />\n    </label>\n    <label>\n      Coordenada final del intervalo\n      <input type=\"text\" bind:value={xf} />\n    </label>\n    <label>\n      Tolerancia\n      <input type=\"text\" bind:value={tol} />\n    </label>\n    <label>\n      Tipo de error\n      <select bind:value={err}>\n        <option value=\"abs\">Absoluto</option>\n        <option value=\"rel\">Relativo</option>\n      </select>\n    </label>\n    <label>\n      Numero maximo de iteraciones\n      <input type=\"text\" bind:value={n_max_iter} />\n    </label>\n    <label>\n      Usar regla falsa\n      <input type=\"checkbox\" bind:value={regla_falsa} />\n    </label>\n  </div>\n</div>\n\n<style>\n  .container {\n    margin-top: 10%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n  }\n  label {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n  }</style>\n",
    "<script>\n  export let func = \"x + 100\";\n</script>\n\n<div class=\"container\">\n  <div class=\"input_container\">\n    <input type=\"text\" placeholder=\"Funcion\" bind:value={func} />\n    <button\n      on:click={() => {\n        func = \"\";\n      }}\n    >\n      Limpiar\n    </button>\n  </div>\n\n  <div class=\"utils\">\n    <button\n      on:click={() => {\n        func += \"exp()\";\n      }}\n    >\n      Exp\n    </button>\n\n    <button\n      on:click={() => {\n        func += \"Abs()\";\n      }}\n    >\n      Abs\n    </button>\n\n    <button\n      on:click={() => {\n        func += \"Ln()\";\n      }}\n    >\n      Ln\n    </button>\n  </div>\n</div>\n\n<style>\n  .container {\n    display: flex;\n    justify-content: space-between;\n  }\n  .utils {\n    display: grid;\n  }</style>\n",
    "<script>\n  import Table from \"./Table.svelte\";\n  import { solve_function } from \"./script\";\n\n  export let func;\n\n  let xi = -1;\n  let tol = 1e-6;\n  let err = \"abs\";\n  let multiplicidad_raiz = 1;\n  let n_max_iter = 1000;\n\n  let message;\n  let raiz;\n  let procedimiento = [];\n\n  $: func || xi || tol || err || multiplicidad_raiz || n_max_iter\n    ? calculate()\n    : null;\n\n  async function calculate() {\n    try {\n      const response = await solve_function(\"newton\", {\n        xi,\n        tol,\n        err,\n        n_max_iter,\n        func,\n        multiplicidad_raiz,\n      });\n\n      raiz = response.raiz;\n      message = response.message;\n      procedimiento = response.results;\n      console.log(response);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n</script>\n\n<div class=\"container\">\n  <div class=\"table\">\n    <div>\n      {raiz}\n    </div>\n    <div>\n      {message}\n    </div>\n    <Table\n      table={procedimiento}\n      encabezado={[\"x\", \"f(x)\", \"f'(x)\", `Error ${err}`]}\n    />\n  </div>\n  <div class=\"info\">\n    <label>\n      Coordenada inicial del intervalo\n      <input type=\"text\" bind:value={xi} />\n    </label>\n    <label>\n      Tolerancia\n      <input type=\"text\" bind:value={tol} />\n    </label>\n    <label>\n      Tipo de error\n      <select bind:value={err}>\n        <option value=\"abs\">Absoluto</option>\n        <option value=\"rel\">Relativo</option>\n      </select>\n    </label>\n    <label>\n      Numero maximo de iteraciones\n      <input type=\"text\" bind:value={n_max_iter} />\n    </label>\n    <label>\n      Multiplicidad de raiz\n      <input type=\"text\" bind:value={multiplicidad_raiz} />\n    </label>\n  </div>\n</div>\n\n<style>\n  .container {\n    margin-top: 10%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n  }\n  label {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n  }</style>\n",
    "<script>\n  import Table from \"./Table.svelte\";\n  import { solve_function } from \"./script\";\n\n  export let func;\n  export let func_g;\n\n  let xi = -1;\n  let tol = 1e-6;\n  let err = \"abs\";\n  let n_max_iter = 1000;\n\n  let message;\n  let raiz;\n  let procedimiento = [];\n\n  $: func || func_g || xi || tol || err || n_max_iter ? calculate() : null;\n\n  async function calculate() {\n    try {\n      const response = await solve_function(\"punto-fijo\", {\n        xi,\n        tol,\n        err,\n        n_max_iter,\n        func,\n        func_g,\n      });\n\n      raiz = response.raiz;\n      message = response.message;\n      procedimiento = response.results;\n      console.log(response);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n</script>\n\n<div class=\"container\">\n  <div class=\"table\">\n    <div>\n      {raiz}\n    </div>\n    <div>\n      {message}\n    </div>\n    <Table table={procedimiento} encabezado={[\"x\", \"f(x)\", `Error ${err}`]} />\n  </div>\n  <div class=\"info\">\n    <label>\n      Coordenada inicial\n      <input type=\"text\" bind:value={xi} />\n    </label>\n    <label>\n      Tolerancia\n      <input type=\"text\" bind:value={tol} />\n    </label>\n    <label>\n      Tipo de error\n      <select bind:value={err}>\n        <option value=\"abs\">Absoluto</option>\n        <option value=\"rel\">Relativo</option>\n      </select>\n    </label>\n    <label>\n      Numero maximo de iteraciones\n      <input type=\"text\" bind:value={n_max_iter} />\n    </label>\n  </div>\n</div>\n\n<style>\n  .container {\n    margin-top: 10%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n  }\n  label {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n  }</style>\n",
    "<script>\n  import Table from \"./Table.svelte\";\n  import { solve_function } from \"./script\";\n\n  export let func;\n\n  let xi = -1;\n  let xf = 1;\n  let tol = 1e-6;\n  let err = \"abs\";\n  let n_max_iter = 1000;\n\n  let message;\n  let raiz;\n  let procedimiento = [];\n\n  $: func || xi || xf || tol || err || n_max_iter ? calculate() : null;\n\n  async function calculate() {\n    try {\n      const response = await solve_function(\"secante\", {\n        xi,\n        xf,\n        tol,\n        err,\n        n_max_iter,\n        func,\n      });\n\n      raiz = response.raiz;\n      message = response.message;\n      procedimiento = response.results;\n      console.log(response);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n</script>\n\n<div class=\"container\">\n  <div class=\"table\">\n    <div>\n      {raiz}\n    </div>\n    <div>\n      {message}\n    </div>\n    <Table table={procedimiento} encabezado={[\"x\", \"f(x)\", `Error ${err}`]} />\n  </div>\n  <div class=\"info\">\n    <label>\n      Coordenada inicial del intervalo\n      <input type=\"text\" bind:value={xi} />\n    </label>\n    <label>\n      Coordenada final del intervalo\n      <input type=\"text\" bind:value={xf} />\n    </label>\n    <label>\n      Tolerancia\n      <input type=\"text\" bind:value={tol} />\n    </label>\n    <label>\n      Tipo de error\n      <select bind:value={err}>\n        <option value=\"abs\">Absoluto</option>\n        <option value=\"rel\">Relativo</option>\n      </select>\n    </label>\n    <label>\n      Numero maximo de iteraciones\n      <input type=\"text\" bind:value={n_max_iter} />\n    </label>\n  </div>\n</div>\n\n<style>\n  .container {\n    margin-top: 10%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n  }\n  label {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n  }</style>\n",
    "<script>\n  export let table;\n  export let encabezado;\n  $: console.log(table);\n</script>\n\n<table>\n  <thead>\n    {#each encabezado as title}\n      <th> {title} </th>\n    {/each}\n  </thead>\n  <tbody>\n    {#each table as row}\n      <tr>\n        {#each row as col}\n          <td>\n            {col}\n          </td>\n        {/each}\n      </tr>\n    {/each}\n  </tbody>\n</table>\n\n<style>\n  table {\n    width: 90%;\n    border-collapse: collapse;\n  }\n  th,\n  td {\n    text-align: center;\n    border: 1px solid rgba(0, 0, 0, 0.151);\n  }</style>\n"
  ],
  "names": [],
  "mappings": "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"
}